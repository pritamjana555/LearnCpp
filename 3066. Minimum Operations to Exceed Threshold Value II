class Solution {
public:
    int minOperations(vector<int>& nums, int k) {
        std::priority_queue<long long, std::vector<long long>, std::greater<long long>> minHeap(nums.begin(), nums.end());
    int operations = 0;

    while (minHeap.size() > 1 && minHeap.top() < k) {
        long long x = minHeap.top(); minHeap.pop();
        long long y = minHeap.top(); minHeap.pop();

        long long newVal = std::min(x, y) * 2 + std::max(x, y);  
        minHeap.push(newVal);
        operations++;
    }

    return (minHeap.top() >= k) ? operations : -1;
    }
};
